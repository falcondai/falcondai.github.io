{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/post-footer.js","webpack:///./src/gatsby-theme-blog/components/post.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/post-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/post.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","Footer","previous","next","css","mt","pt","hr","as","flexWrap","justifyContent","listStyle","padding","a","Link","to","slug","rel","title","Post","data","post","site","siteMetadata","author","location","meta","property","content","href","description","excerpt","isArticle","h1","p","fontSize","mb","color","date","body","PostPage","blogPost","query"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js-a3d952849a319c3b0ed7.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { css, Styled, Flex } from \"theme-ui\"\n\nconst Footer = ({ previous, next }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    <Styled.hr />\n    {(previous || next) && (\n      <Flex\n        as=\"ul\"\n        css={css({\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        })}\n      >\n        <li>\n          {previous && (\n            <Styled.a as={Link} to={previous.slug} rel=\"prev\">\n              ← {previous.title}\n            </Styled.a>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Styled.a as={Link} to={next.slug} rel=\"next\">\n              {next.title} →\n            </Styled.a>\n          )}\n        </li>\n      </Flex>\n    )}\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport { Styled, css } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport \"katex/dist/katex.min.css\"\n\nimport Layout from \"gatsby-theme-blog/src/components/layout\"\nimport SEO from \"gatsby-theme-blog/src/components/seo\"\n\nimport PostFooter from \"../../components/post-footer\"\n\nconst Post = ({\n  data: {\n    post,\n    site: {\n      siteMetadata: {\n        title,\n        author,\n      },\n    },\n  },\n  location,\n  previous,\n  next,\n}) => (\n  <Layout title={title}>\n    <SEO\n      title={post.title}\n      meta={[\n        // TODO\n        // {\n        //   property: `article:published_time`,\n        //   content: post.date,\n        // },\n        {\n          property: `article:author`,\n          content: author,\n        },\n      ]}\n      location={location.href}\n      description={post.excerpt}\n      isArticle\n    />\n    <main>\n      <Styled.h1>{post.title}</Styled.h1>\n      <Styled.p\n        css={css({\n          fontSize: 1,\n          mt: -3,\n          mb: 3,\n          color: `muted`,\n        })}\n      >\n        {post.date}\n      </Styled.p>\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n    <PostFooter {...{ previous, next }} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostPage from \"../components/post\"\n\nexport default PostPage\n\nexport const query = graphql`\n  query PostPageQuery($id: String!, $previousId: String, $nextId: String) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    blogPost(id: { eq: $id }) {\n      id\n      excerpt\n      body\n      slug\n      title\n      tags\n      keywords\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    previous: blogPost(id: { eq: $previousId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n    next: blogPost(id: { eq: $nextId }) {\n      id\n      excerpt\n      slug\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../components/post\"\n\nexport default ({ location, data }) => {\n  const { blogPost, previous, next } = data\n\n  return (\n    <Post\n      data={{ ...data, post: blogPost }}\n      location={location}\n      previous={previous}\n      next={next}\n    />\n  )\n}\n"],"sourceRoot":""}